class Solution {
    public int lengthOfLIS(int[] nums) {
        
        List<Integer> list = new ArrayList<>();
        
        list.add(nums[0]);
        for(int i=1; i<nums.length; i++) {
            if(nums[i] > list.get(list.size() - 1)) {
                list.add(nums[i]);
            } else {
                int index = ceil(list, nums[i]);
                list.set(index, nums[i]);
            }
        }
        return list.size();
        
    }
    
    public int ceil(List<Integer> list, int target) {
        
        int answer = -1;
        int start = 0;
        int end = list.size() - 1;
        while(start <= end) {
            int mid = start + (end - start) / 2;
            if(list.get(mid) == target) {
                return mid;
            } else if(list.get(mid) > target) {
                answer = mid;
                end = mid - 1;
            } else {
                start = mid + 1;
            }
        }
        return answer;
    }
}
